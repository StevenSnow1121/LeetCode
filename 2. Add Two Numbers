/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode *ans = new ListNode();
        
        
        ListNode *cur = ans;
        int last = 0;
        
        while(l1 != 0 || l2 != 0 || last != 0){
            if(l1 != 0){
                cur -> val += l1->val;
            }
            if(l2 !=0){
                cur -> val += l2 -> val;
            }
            cur -> val += last;
            last = cur -> val / 10;
            cur -> val %= 10;
            
            if(l1 != 0){
                l1 = l1->next;
            }
            if(l2 != 0){
                l2 = l2->next;
            }
            
            if(l1 != 0 || l2 != 0 || last != 0){
                cur -> next = new ListNode();
                cur = cur -> next;
            }
            
        }
        return ans;
        
    }
};
